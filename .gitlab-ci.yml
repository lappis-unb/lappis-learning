stages:
  - build
  # - deploy
  # - test

gitlab-build:
  image: docker:17.04-git
  services:
    - docker:17.04-dind
  stage: build
  variables:
    SALICML_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/salic-ml:$CI_BUILD_REF_NAME
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f docker/dev/Dockerfile -t $SALICML_RELEASE_IMAGE .
    - docker tag $SALICML_RELEASE_IMAGE "$CI_REGISTRY_IMAGE/salic-ml:develop"
    - docker push $SALICML_RELEASE_IMAGE
    - docker push "$CI_REGISTRY_IMAGE/salic-ml:develop"
  # only:
  #   - develop
  environment: docker

# flake:
#   image: python:alpine
#   stage: test
#   script:
#     - pip3 install flake8
#     - flake8 salicml/

# test:
#   image: debian:buster-slim
#   stage: test
#   script:
#     - apt-get update && apt-get install -y --no-install-recommends python3 python3-dev python3-pip python3-setuptools python3-pyodbc tdsodbc unixodbc unixodbc-dev freetds-dev build-essential
#     - update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10
#     - update-alternatives --install /usr/bin/python python /usr/bin/python3 10
#     - pip3 install -r requirements.txt
#     - python3 setup.py develop
#     - pytest -s -v

# deploy to development:
#   stage: deploy
#   image: cdrx/rancher-gitlab-deploy
#   environment: develop
#   script:
#     - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service noosfero-fga --debug
#   only:
#     - develop
#   tags:
#     - docker